<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MiracleJune</title>
  
  <subtitle>下一站花开</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-24T07:03:40.852Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>烟烟</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/07/06/GitDay01/"/>
    <id>http://example.com/2021/07/06/GitDay01/</id>
    <published>2021-07-06T09:12:37.086Z</published>
    <updated>2021-06-24T07:03:40.852Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>Git官网<a href="https://git-scm.com/">https://git-scm.com/</a></p><p><a href="http://www.git-scm.com.cn/">Git中文网-GitLab中文网</a><a href="http://www.git-scm.com.cn/">http://www.git-scm.com.cn/</a></p><p>选择安装路径，使用默认设置直接next即可。</p><h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;$ git init</span><br><span class="line">&gt;$ ssh-keygen -t rsa -C <span class="string">&quot;your_email@youremail.com&quot;</span></span><br><span class="line">&gt;$ ssh -T git@github.com</span><br><span class="line">&gt;$ git config --global user.name <span class="string">&quot;your name&quot;</span></span><br><span class="line">&gt;$ git config --global user.email <span class="string">&quot;your_email@youremail.com&quot;</span></span><br><span class="line">&gt;$ git remote add origin git@github.com:yourName/yourRepo.git</span><br><span class="line">&gt;$ git add</span><br><span class="line">&gt;$ git push</span><br><span class="line">&gt;$ git pull</span><br></pre></td></tr></table></figure></blockquote><h2 id="本地仓库与GitHub"><a href="#本地仓库与GitHub" class="headerlink" title="本地仓库与GitHub"></a>本地仓库与GitHub</h2><h3 id="手动上传至GitHub"><a href="#手动上传至GitHub" class="headerlink" title="手动上传至GitHub"></a>手动上传至GitHub</h3><ol><li>点击new repository，新建一个repository，设置Repository name为你的项目名，默认为public，此处设置为private，点击create repository成功创建。</li><li>点击新建好的repository，可以选择Add file中的Upload files（单次文件个数和大小有限制），拖动文件进入或点击手动选择文件，最后点击Commit changes即可。</li></ol><h3 id="使用Git管理"><a href="#使用Git管理" class="headerlink" title="使用Git管理"></a>使用Git管理</h3><p>​        在电脑硬盘里新建一个仓库文件夹，例如D:\workspaces\Java，点击进入文件夹。</p><h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h3><ol><li><p>如果是GitHub中已经创建了项目(例如TestGit)，且权限为public，点击GitHub中clone or download，选择https中的链接，复制备用。在本地右键项目，点击Git Bash Here。需要把GitHub上的代码仓库克隆到本地。($为Git自带，无需手动输入)</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/你的用户名/项目名.git<span class="comment">#上面复制的链接</span></span><br></pre></td></tr></table></figure></blockquote><p>操作完成后发现本地D:\workspaces\Java目录下多出一个项目文件夹TestGit，将本地项目里的文件复制到TestGit里。</p><p>输入cd 项目文件夹，进入TestGit</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> TestGit</span><br></pre></td></tr></table></figure></blockquote><p>输入以下代码</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add . <span class="comment">#添加TestGIt里的文件</span></span><br><span class="line">$ git commit -m <span class="string">&quot;提交信息&quot;</span> </span><br><span class="line">$ git push -u origin main <span class="comment">#本地仓库push到GitHub</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>如果是private项目，则需要在本地创建ssh key</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;$ ssh-keygen -t rsa -C <span class="string">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure></blockquote><p>引号里面填写自己的GitHub注册邮箱，会提示输入路径和密码，使用默认设置直接回车。成功会在系统用户文件夹下生成.ssh文件夹，点击进去打开id_rsa.pub，复制其中的ssh key。</p><p>回到GitHub网站，在AccountSettings选择SSH Keys,Add SSH Key，把之前的key粘贴进去。</p><p>验证是否成功，在git bash中输入</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></blockquote><p>由于是第一次使用，会提示是否继续，输入yes并回车会提示：Hi 用户名! You’ve successfully authenticated, but GitHub does not provide shell access.说明已经连上了GitHub。</p><p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;邮箱地址&quot;</span></span><br><span class="line"></span><br><span class="line">  由于已经在GitHub中创建了仓库，点击Code，选择Clone下的SSH链接复制备用。进入本地要上传的仓库，右键git bash，添加复制的而远程地址：</span><br><span class="line">```bash</span><br><span class="line">$ git remote add origin git@github.com:yourName/yourRepo.git</span><br></pre></td></tr></table></figure></blockquote><p> 加完之后进入.git，打开config，这里会多出一个remote “origin”内容，这就是刚才添加的远程地址，也可以直接修改config来配置远程地址。</p><p> 操作提交，与上面1步骤相同，代码即可上传至GitHub。</p></li></ol><p>部分引用自：</p><blockquote><p><a href="%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://www.cnblogs.com/cxk1995/p/5800196.html">使用git将项目上传到github（最简单方法）</a></p><p><a href="%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://www.cnblogs.com/cxscode/p/8325064.html">如何用git将项目代码上传到github</a></p><p><a href="%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://www.runoob.com/w3cnote/git-guide.html">Github 简明教程</a></p><p><a href="%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://blog.csdn.net/qq_42585582/article/details/109006783">git分支从master切换到main</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h2&gt;&lt;p&gt;Git官网&lt;a href=&quot;https://git-scm.com/&quot;&gt;https://git-scm.com/&lt;/a&gt;&lt;/</summary>
      
    
    
    
    
  </entry>
  
</feed>
